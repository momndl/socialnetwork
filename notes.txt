sudo service postgresql start
database = socialnetwork


vivacious.camp@spicedling.email - sender 
vivacious.camp+funky@spicedling.email
vivacious.camp+funkychicken@spicedling.email



// TODO ==
- styling is nice,
- add interval to code query
- everything is in welcome section... change!
- catch editing -> do it like get /user.json



=== NOTES for PART 4 ===
-> loged in user experience -> like welcome but more tricky , router in part 5.  
-> three components, app -> route component. profile pic, shows profile pic(or default). uploader -> modal, appears when user clicks on profile pic. 
- data flows from parent to child. one way -> store information in app component (state) -> change data there .
- in app fetch, something when mounted
- update database -> add bio, pic url
-component did mount runs after render is called!!! -> render will run everry time state changes!

-uploader component, make it a class so it has state and can show a loading status after upload

// NEXT ->
fetch draft bio to server, store in database, return bio from database to app. lazy sunday

-> hooks <-
#1 - start with use useState(), useEffect()
#2 - can only be called from function componenent
#3 - have to be called from top level. cant be called inside a loop or conditional
#4 - have to run everytime fn component is called

export default function Profile() {
    - state related stuff 
    - hook

}

NOTES TO TESTING SHIZZLE -
normal file names app.test.js ->